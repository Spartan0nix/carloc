@startuml UML

package "Database" #FFF {
    ' ---------------------------------
    ' Car component
    ' ---------------------------------
    entity brand {
        - id
        - brand
    }
    entity color {
        - id
        - color
    }
    entity fuel {
        - id
        - fuel
    }
    entity gearbox {
        - id
        - gearbox
    }
    entity model {
        - id
        - model
    }
    entity type {
        - id
        - type
    }
    ' ---------------------------------
    ' Office and user component
    ' ---------------------------------
    entity department {
        - id
        - name
        - code
    }
    entity city {
        - id
        - name
        - code
    }
    ' ---------------------------------
    ' Rent component
    ' ---------------------------------
    entity status {
        - id
        - status
    }
    entity credit_card {
        - id
        - number
        - owner
        - expiration_date
        - cvv
    }

    entity office {
        - id
        - city_id
        - department_id
        - street
        - tel_number
        - email
    }
    entity car {
        - id
        - fuel_id
        - brand_id
        - model_id
        - color_id
        - gearbox_id
        - pickup_office_id
        - horsepower
        - description
        - daily_price
        - release_year
    }
    ' ---------------------------------
    ' car relation table
    ' ---------------------------------
    entity car_type {
        - car_id
        - type_id
    }
    entity option {
        - id
        - option
    }
    entity car_option {
        - car_id
        - option_id
    }
    entity car_image {
        - id
        - image
    }
    entity car_car_image {
        - car_id
        - car_image_id
    }

    entity user {
        - id
        - city_id
        - department_id
        - email
        - roles
        - password
        - last_name
        - first_name
    }
    entity credit_card_user {
        - user_id
        - credit_card_id
    }
    ' entity transaction {
    '     - id
    '     - total_price
    '     - start_date
    '     - ent_date
    '     - created_at
    '     - user_id (serialize summary of the user)
    '     - credit_card (serialize summary of the credit_card)
    '     - refunded
    '     - refunded_at
    '     - rent (serialize summary of the rent)
    ' }

    entity rent {
        - id
        - price
        - pickup_office_id
        - return_office_id
        - user_id
        - credit_card_id
        - car_id
        - status_id
        - pickup_date
        - return_date
    }

    department "One" o-- "Many" Office: To
    city "One" o-- "Many" Office: To

    Office "One" o-- "Many" car: To

    brand "One" o-- "Many" car: To
    color "One" o-- "Many" car: To
    fuel "One" o-- "Many" car: To
    gearbox "One" o-- "Many" car: To
    model "One" o-- "Many" car: To

    type " " -- " " car_type: ""
    car " " -- " " car_type: ""
    option " " -- " " car_option: ""
    car " " -- " " car_option: ""
    car_image " " -- " " car_car_image: ""
    car " " -- " " car_car_image: ""

    department "One" o-- "Many" user: To
    city "One" o-- "Many" user: To
    credit_card " " -- " " credit_card_user: To
    user " " -- " " credit_card_user: To

    user "One" o-- "Many" rent: To
    Office "One" o-- "Many" rent: To
    Office "One" o-- "Many" rent: To
    car "One" o-- "Many" rent: To
    status "One" o-- "Many" rent: To
    credit_card "One" o-- "Many" rent: To

}
@enduml